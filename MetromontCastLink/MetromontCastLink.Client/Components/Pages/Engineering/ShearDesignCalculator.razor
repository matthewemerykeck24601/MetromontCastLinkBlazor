@using MetromontCastLink.Shared.Models
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons

<div class="calculator-form">
    <h4>Shear Design Calculator</h4>

    <div class="form-section">
        <h5>Member Properties</h5>
        <div class="form-row">
            <div class="form-group">
                <label>Effective Depth (in)</label>
                <SfNumericTextBox TValue="double" @bind-Value="@EffectiveDepth" Min="0" Format="F2" />
            </div>
            <div class="form-group">
                <label>Web Width (in)</label>
                <SfNumericTextBox TValue="double" @bind-Value="@WebWidth" Min="0" Format="F2" />
            </div>
        </div>
    </div>

    <div class="form-section">
        <h5>Shear Forces</h5>
        <div class="form-row">
            <div class="form-group">
                <label>Ultimate Shear (kips)</label>
                <SfNumericTextBox TValue="double" @bind-Value="@UltimateShear" Min="0" />
            </div>
            <div class="form-group">
                <label>Distance from Support (ft)</label>
                <SfNumericTextBox TValue="double" @bind-Value="@DistanceFromSupport" Min="0" />
            </div>
        </div>
    </div>

    <div class="form-actions">
        <SfButton CssClass="e-primary" @onclick="Calculate">Calculate</SfButton>
        <SfButton CssClass="e-outline" @onclick="Reset">Reset</SfButton>
    </div>
</div>

@code {
    [Parameter] public EventCallback<CalculationResult> OnCalculationComplete { get; set; }

    private double EffectiveDepth { get; set; } = 36;
    private double WebWidth { get; set; } = 8;
    private double UltimateShear { get; set; } = 75;
    private double DistanceFromSupport { get; set; } = 3;

    private async Task Calculate()
    {
        // Simplified shear design calculation
        var result = new CalculationResult
        {
            CalculationType = "Shear Design",
            Status = "Pass",
            DesignCode = "ACI 318-19",
            SafetyFactor = 1.0,
            Utilization = 0.82,
            Details = new List<ResultDetail>
            {
                new ResultDetail { Label = "Concrete Shear Capacity", Value = "45", Unit = "kips" },
                new ResultDetail { Label = "Steel Shear Capacity", Value = "55", Unit = "kips" },
                new ResultDetail { Label = "Total Shear Capacity", Value = "100", Unit = "kips" },
                new ResultDetail { Label = "Required Stirrup Spacing", Value = "12", Unit = "in" }
            },
            Warnings = new List<string>()
        };

        await OnCalculationComplete.InvokeAsync(result);
    }

    private void Reset()
    {
        EffectiveDepth = 36;
        WebWidth = 8;
        UltimateShear = 75;
        DistanceFromSupport = 3;
    }
}