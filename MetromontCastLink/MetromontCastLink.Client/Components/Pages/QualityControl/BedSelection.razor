@page "/quality/bed-report-selection"
@using MetromontCastLink.Shared.Models
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups
@inject NavigationManager Navigation

<PageTitle>Select Bed for QC Report - Metromont CastLink</PageTitle>

<style>
    .bed-selection-page {
        padding: 2rem;
        background: #f5f6fa;
        min-height: calc(100vh - 60px);
    }

    .page-header {
        margin-bottom: 2rem;
    }

        .page-header h1 {
            margin: 0 0 0.5rem 0;
            font-size: 2rem;
            font-weight: 600;
            color: #1e293b;
        }

        .page-header p {
            margin: 0;
            color: #64748b;
            font-size: 1.125rem;
        }

    .bed-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .bed-card {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.06);
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        border: 2px solid transparent;
    }

        .bed-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.1);
            border-color: #e0e7ff;
        }

        .bed-card.selected {
            border-color: #6366f1;
            background: #f0f9ff;
        }

    .bed-header {
        display: flex;
        justify-content: space-between;
        align-items: start;
        margin-bottom: 1rem;
    }

    .bed-name {
        font-size: 1.25rem;
        font-weight: 600;
        color: #1e293b;
        margin: 0;
    }

    .bed-type {
        background: #e0e7ff;
        color: #4c1d95;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 500;
    }

    .bed-details {
        margin-bottom: 1rem;
    }

    .bed-location {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 0.5rem;
        color: #64748b;
    }

    .bed-specs {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 1rem;
        margin-top: 1rem;
    }

    .spec-item {
        text-align: center;
    }

    .spec-label {
        font-size: 0.75rem;
        color: #94a3b8;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .spec-value {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1e293b;
        margin-top: 0.25rem;
    }

    .allowed-products {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        flex-wrap: wrap;
        margin-top: 1rem;
        padding-top: 1rem;
        border-top: 1px solid #e5e7eb;
    }

    .products-label {
        font-size: 0.875rem;
        color: #64748b;
        font-weight: 500;
    }

    .product-chip {
        background: #f3f4f6 !important;
        color: #374151 !important;
        font-size: 0.75rem !important;
        padding: 0.25rem 0.75rem !important;
    }

    .more-products {
        font-size: 0.75rem;
        color: #6366f1;
        font-weight: 500;
    }

    .selected-indicator {
        position: absolute;
        top: 1rem;
        right: 1rem;
        width: 32px;
        height: 32px;
        background: #6366f1;
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
        justify-content: center;
        margin-top: 2rem;
    }

    .additional-info {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.06);
    }

        .additional-info h4 {
            margin: 0 0 1.5rem 0;
            font-size: 1.25rem;
            font-weight: 600;
            color: #1e293b;
        }

    .form-group {
        margin-bottom: 1.5rem;
    }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #374151;
        }

    .e-icons {
        font-size: 16px;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .bed-selection-page {
            padding: 1rem;
        }

        .bed-grid {
            grid-template-columns: 1fr;
        }

        .bed-specs {
            grid-template-columns: 1fr;
            gap: 0.5rem;
        }

        .action-buttons {
            flex-direction: column;
        }

            .action-buttons .e-btn {
                width: 100%;
            }
    }
</style>

<div class="bed-selection-page">
    <div class="page-header">
        <h1>Select Bed for Quality Control Report</h1>
        <p>Choose the bed you want to inspect and create a report for</p>
    </div>

    <div class="bed-grid">
        @foreach (var bed in AvailableBeds)
        {
            <div class="bed-card @(bed.Id == SelectedBedId ? "selected" : "")" @onclick="@(() => SelectBed(bed.Id))">
                <div class="bed-header">
                    <h3 class="bed-name">@bed.Name</h3>
                    <span class="bed-type">@bed.Type</span>
                </div>
                <div class="bed-details">
                    <div class="bed-location">
                        <span class="e-icons e-location"></span>
                        <span>@bed.Location</span>
                    </div>
                    <div class="bed-specs">
                        <div class="spec-item">
                            <div class="spec-label">Length</div>
                            <div class="spec-value">@bed.Length ft</div>
                        </div>
                        <div class="spec-item">
                            <div class="spec-label">Width</div>
                            <div class="spec-value">@bed.Width ft</div>
                        </div>
                        <div class="spec-item">
                            <div class="spec-label">Capacity</div>
                            <div class="spec-value">@bed.Capacity pcs</div>
                        </div>
                    </div>
                    <div class="allowed-products">
                        <span class="products-label">Allowed:</span>
                        @foreach (var product in bed.AllowedProductTypes.Take(3))
                        {
                            <SfChip CssClass="product-chip">@product</SfChip>
                        }
                        @if (bed.AllowedProductTypes.Count > 3)
                        {
                            <span class="more-products">+@(bed.AllowedProductTypes.Count - 3) more</span>
                        }
                    </div>
                </div>
                @if (bed.Id == SelectedBedId)
                {
                    <div class="selected-indicator">
                        <span class="e-icons e-check"></span>
                    </div>
                }
            </div>
        }
    </div>

    <div class="additional-info">
        <h4>Additional Information</h4>
        <div class="form-group">
            <label>Inspector Name</label>
            <SfTextBox @bind-Value="@InspectorName" Placeholder="Enter inspector name" />
        </div>
        <div class="form-group">
            <label>Notes</label>
            <SfTextBox @bind-Value="@Notes" Multiline="true" Placeholder="Any additional notes" />
        </div>
    </div>

    <div class="action-buttons">
        <SfButton CssClass="e-flat" @onclick="GoBack">Cancel</SfButton>
        <SfButton CssClass="e-primary" Disabled="@(string.IsNullOrEmpty(SelectedBedId))" @onclick="StartReport">
            Start Inspection
        </SfButton>
    </div>
</div>

<SfDialog @ref="BedSelectionDialog" Width="400px" IsModal="true" ShowCloseIcon="true">
    <DialogTemplates>
        <Header>Confirm Bed Selection</Header>
        <Content>
            <p>You have selected <strong>@GetSelectedBedName()</strong> for inspection.</p>
            <p>Are you ready to start the quality control report?</p>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="Cancel" OnClick="@CloseDialog" />
        <DialogButton Content="Start Report" IsPrimary="true" OnClick="@StartReportFromDialog" />
    </DialogButtons>
</SfDialog>

@code {
    private SfDialog? BedSelectionDialog;
    private List<BedInformation> AvailableBeds = new();
    private string? SelectedBedId;
    private string? InspectorName;
    private string? Notes;

    protected override async Task OnInitializedAsync()
    {
        await LoadBedInformation();
    }

    private async Task LoadBedInformation()
    {
        // Load beds from the BedDatabase
        AvailableBeds = BedDatabase.GetAllBeds();
    }

    private void SelectBed(string bedId)
    {
        SelectedBedId = bedId;
    }

    private string GetSelectedBedName()
    {
        var bed = AvailableBeds.FirstOrDefault(b => b.Id == SelectedBedId);
        return bed?.Name ?? "";
    }

    private void StartReport()
    {
        if (!string.IsNullOrEmpty(SelectedBedId))
        {
            Navigation.NavigateTo($"/quality/bed-qc-report/{SelectedBedId}");
        }
    }

    private void StartReportFromDialog()
    {
        StartReport();
    }

    private async Task CloseDialog()
    {
        if (BedSelectionDialog != null)
        {
            await BedSelectionDialog.HideAsync();
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/quality");
    }
}