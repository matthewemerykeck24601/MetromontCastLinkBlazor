@page "/production/scheduling"
@using MetromontCastLink.Shared.Models
@using MetromontCastLink.Client.Services
@using Syncfusion.Blazor.Schedule
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Notifications
@using Syncfusion.Blazor.Grids
@inject IACCService ACCService
@inject IStorageService StorageService
@inject NavigationManager Navigation

<PageTitle>Production Scheduling - Metromont CastLink</PageTitle>

<style>
    .production-scheduling-page {
        padding: 1rem;
        background: #f5f6fa;
        min-height: calc(100vh - 60px);
    }

    .page-header {
        background: white;
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.06);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .header-left {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .header-left h2 {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 600;
        color: #1e293b;
    }

    .header-right {
        display: flex;
        gap: 0.5rem;
    }

    .scheduling-container {
        display: flex;
        gap: 1.5rem;
        height: calc(100vh - 200px);
    }

    .control-panel {
        width: 300px;
        background: white;
        border-radius: 8px;
        padding: 1.5rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.06);
        overflow-y: auto;
    }

    .control-section {
        margin-bottom: 2rem;
    }

    .control-section h3 {
        margin: 0 0 1rem 0;
        font-size: 1.125rem;
        font-weight: 600;
        color: #1e293b;
    }

    .filter-group {
        margin-bottom: 1rem;
    }

    .filter-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-size: 0.875rem;
        font-weight: 500;
        color: #374151;
    }

    .schedule-container {
        flex: 1;
        background: white;
        border-radius: 8px;
        padding: 1rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.06);
        overflow: hidden;
    }

    .resource-list {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .resource-item {
        padding: 0.75rem;
        background: #f9fafb;
        border-radius: 6px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .resource-item:hover {
        background: #f3f4f6;
    }

    .resource-item.available {
        border-left: 3px solid #10b981;
    }

    .resource-item.occupied {
        border-left: 3px solid #ef4444;
    }

    .resource-name {
        font-weight: 500;
        color: #1e293b;
    }

    .resource-status {
        font-size: 0.75rem;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-weight: 500;
    }

    .resource-item.available .resource-status {
        background: #d1fae5;
        color: #065f46;
    }

    .resource-item.occupied .resource-status {
        background: #fee2e2;
        color: #991b1b;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 0.75rem;
    }

    .stat-item {
        padding: 1rem;
        background: #f9fafb;
        border-radius: 6px;
        text-align: center;
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: 600;
        color: #1e293b;
        display: block;
    }

    .stat-label {
        font-size: 0.75rem;
        color: #6b7280;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    /* Event Template Styles */
    .event-template {
        padding: 0.5rem;
        height: 100%;
        border-radius: 4px;
    }

    .event-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.25rem;
    }

    .event-title {
        font-weight: 500;
        font-size: 0.875rem;
    }

    .event-status {
        font-size: 0.625rem;
        padding: 0.125rem 0.375rem;
        border-radius: 3px;
        background: #e5e7eb;
        color: #4b5563;
    }

    .event-details {
        display: flex;
        gap: 0.5rem;
        font-size: 0.75rem;
        color: #6b7280;
    }

    .status-scheduled {
        background: #dbeafe !important;
    }

    .status-progress {
        background: #fef3c7 !important;
    }

    .status-completed {
        background: #d1fae5 !important;
    }

    /* Dialog Styles */
    .schedule-form {
        padding: 1rem;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
    }

    .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-size: 0.875rem;
        font-weight: 500;
        color: #374151;
    }

    .required {
        color: #ef4444;
    }

    .dialog-footer {
        display: flex;
        justify-content: flex-end;
        gap: 0.5rem;
        padding: 1rem;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .scheduling-container {
            flex-direction: column;
        }

        .control-panel {
            width: 100%;
            border-right: none;
            border-bottom: 1px solid #e5e7eb;
            max-height: 300px;
        }

        .form-row {
            grid-template-columns: 1fr;
        }
    }

    @@media (max-width: 480px) {
        .header-content {
            flex-direction: column;
            align-items: start;
            gap: 1rem;
        }

        .header-right {
            width: 100%;
            justify-content: flex-start;
        }
    }
</style>

<div class="production-scheduling-page">
    <div class="page-header">
        <div class="header-content">
            <div class="header-left">
                <SfButton CssClass="e-flat" IconCss="e-icons e-arrow-left" @onclick="GoBack">Back</SfButton>
                <h2>Production Scheduling</h2>
            </div>
            <div class="header-right">
                <SfButton CssClass="e-primary" IconCss="e-icons e-add" @onclick="ShowNewScheduleDialog">
                    New Schedule
                </SfButton>
                <SfButton CssClass="e-outline" IconCss="e-icons e-refresh" @onclick="RefreshSchedule">
                    Refresh
                </SfButton>
            </div>
        </div>
    </div>

    <div class="scheduling-container">
        <!-- Left Panel: Filters and Controls -->
        <div class="control-panel">
            <div class="control-section">
                <h3>Filters</h3>
                
                <div class="filter-group">
                    <label>Project</label>
                    <ACCProjectSelector @bind-SelectedProjectId="@CurrentProjectId" 
                        OnProjectSelected="OnProjectSelected" />
                </div>

                <div class="filter-group">
                    <label>Date Range</label>
                    <SfDateRangePicker TValue="DateTime?" @bind-StartDate="@StartDate" @bind-EndDate="@EndDate"
                        Placeholder="Select date range" Format="MM/dd/yyyy">
                        <DateRangePickerEvents TValue="DateTime?" ValueChange="OnDateRangeChange" />
                    </SfDateRangePicker>
                </div>

                <div class="filter-group">
                    <label>Bed Types</label>
                    <SfMultiSelect TValue="string[]" TItem="BedType" @bind-Value="@SelectedBedTypes"
                        DataSource="@BedTypes" Placeholder="All bed types">
                        <MultiSelectFieldSettings Text="Name" Value="Id" />
                        <MultiSelectEvents TValue="string[]" TItem="BedType" ValueChange="OnBedTypeChange" />
                    </SfMultiSelect>
                </div>

                <div class="filter-group">
                    <label>Product Types</label>
                    <SfMultiSelect TValue="string[]" TItem="ProductType" @bind-Value="@SelectedProductTypes"
                        DataSource="@ProductTypes" Placeholder="All product types">
                        <MultiSelectFieldSettings Text="Name" Value="Id" />
                        <MultiSelectEvents TValue="string[]" TItem="ProductType" ValueChange="OnProductTypeChange" />
                    </SfMultiSelect>
                </div>
            </div>

            <div class="control-section">
                <h3>Bed Resources</h3>
                <div class="resource-list">
                    @foreach (var bed in BedResources)
                    {
                        <div class="resource-item @(bed.IsAvailable ? "available" : "occupied")">
                            <span class="resource-name">@bed.Name</span>
                            <span class="resource-status">@(bed.IsAvailable ? "Available" : "Occupied")</span>
                        </div>
                    }
                </div>
            </div>

            <div class="control-section">
                <h3>Statistics</h3>
                <div class="stats-grid">
                    <div class="stat-item">
                        <span class="stat-value">@ProductionEvents.Count</span>
                        <span class="stat-label">Total Events</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-value">@ProductionEvents.Count(e => e.Status == "In Progress")</span>
                        <span class="stat-label">In Progress</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-value">@ProductionEvents.Count(e => e.Status == "Completed")</span>
                        <span class="stat-label">Completed</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Schedule View -->
        <div class="schedule-container">
            <SfSchedule @ref="ScheduleRef" TValue="ProductionEvent" Height="100%" 
                StartHour="06:00" EndHour="18:00" WorkHours="@WorkHours"
                CurrentView="View.TimelineWeek">
                <ScheduleViews>
                    <ScheduleView Option="View.TimelineDay" />
                    <ScheduleView Option="View.TimelineWeek" />
                    <ScheduleView Option="View.TimelineMonth" />
                    <ScheduleView Option="View.Agenda" />
                </ScheduleViews>
                <ScheduleResources>
                    <ScheduleResource TItem="BedResource" TValue="string" 
                        DataSource="@BedResources" Field="BedId" 
                        Title="Production Bed" Name="Beds"
                        TextField="Name" IdField="Id" ColorField="Color" />
                </ScheduleResources>
                <ScheduleEventSettings DataSource="@ProductionEvents">
                    <ScheduleEventSettingsTemplate>
                        <Template Context="eventContext">
                            @{
                                var evt = eventContext as ProductionEvent;
                            }
                            <div class="event-template @GetStatusClass(evt?.Status)">
                                <div class="event-header">
                                    <span class="event-title">@evt?.ProductName</span>
                                    <span class="event-status">@evt?.Status</span>
                                </div>
                                <div class="event-details">
                                    <span>@evt?.Quantity pcs</span>
                                    <span>@evt?.ProjectName</span>
                                </div>
                            </div>
                        </Template>
                    </ScheduleEventSettingsTemplate>
                </ScheduleEventSettings>
                <ScheduleEvents TValue="ProductionEvent" 
                    EventRendered="OnEventRendered"
                    ActionBegin="OnActionBegin"
                    ActionComplete="OnActionComplete" />
            </SfSchedule>
        </div>
    </div>
</div>

<!-- Rest of the component stays the same... -->