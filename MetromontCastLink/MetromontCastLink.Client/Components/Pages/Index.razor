@page "/"
@using MetromontCastLink.Shared.Models
@using Syncfusion.Blazor.Charts
@inject NavigationManager Navigation
@inject IACCService ACCService

<PageTitle>Home - Metromont CastLink</PageTitle>

<div class="home-page">
    <!-- Welcome Section -->
    <div class="welcome-section">
        <div class="welcome-content">
            <div class="welcome-text">
                <h1>Welcome to CastLink</h1>
                <p>Integrated precast concrete manufacturing management platform</p>
                @if (IsAuthenticated)
                {
                    <p class="user-greeting">Hello, @UserName! You have access to @ProjectCount projects.</p>
                }
            </div>
            <div class="welcome-actions">
                @if (!IsAuthenticated)
                {
                    <SfButton CssClass="e-primary e-large" @onclick="ConnectToACC">
                        Connect to Autodesk Construction Cloud
                    </SfButton>
                }
                else
                {
                    <ACCProjectSelector @bind-SelectedProjectId="@CurrentProjectId" 
                        ShowProjectInfo="true" 
                        Label="Active Project" />
                }
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="quick-actions">
        <h2>Quick Actions</h2>
        <div class="actions-grid">
            <div class="action-card" @onclick="() => NavigateTo(&quot;/quality/bed-report-selection&quot;)">
                <div class="action-icon quality">
                    <span class="e-icons e-quality"></span>
                </div>
                <span>New QC Report</span>
            </div>
            <div class="action-card" @onclick="() => NavigateTo(&quot;/engineering/calculator&quot;)">
                <div class="action-icon engineering">
                    <span class="e-icons e-calculator"></span>
                </div>
                <span>Design Calculator</span>
            </div>
            <div class="action-card" @onclick="() => NavigateTo(&quot;/engineering/viewer&quot;)">
                <div class="action-icon model">
                    <span class="e-icons e-3d-model"></span>
                </div>
                <span>View Models</span>
            </div>
            <div class="action-card" @onclick="() => NavigateTo(&quot;/production/scheduling&quot;)">
                <div class="action-icon production">
                    <span class="e-icons e-calendar"></span>
                </div>
                <span>Production Schedule</span>
            </div>
        </div>
    </div>

    <!-- Dashboard Grid -->
    <div class="dashboard-grid">
        <!-- Production Overview -->
        <div class="dashboard-card production-card">
            <h3>Production Status</h3>
            <div class="stats-summary">
                <div class="stat">
                    <span class="value">@ActiveBeds</span>
                    <span class="label">Active Beds</span>
                </div>
                <div class="stat">
                    <span class="value">@TodayProduction</span>
                    <span class="label">Pieces Today</span>
                </div>
                <div class="stat">
                    <span class="value">@EfficiencyRate%</span>
                    <span class="label">Efficiency</span>
                </div>
            </div>
            <SfButton CssClass="e-flat" @onclick="() => NavigateTo(&quot;/production&quot;)">View Details →</SfButton>
        </div>

        <!-- Quality Control Overview -->
        <div class="dashboard-card quality-card">
            <h3>Quality Control</h3>
            <div class="stats-summary">
                <div class="stat">
                    <span class="value">@PassRate%</span>
                    <span class="label">Pass Rate</span>
                </div>
                <div class="stat">
                    <span class="value">@ReportsToday</span>
                    <span class="label">Reports Today</span>
                </div>
                <div class="stat">
                    <span class="value">@PendingReviews</span>
                    <span class="label">Pending</span>
                </div>
            </div>
            <SfButton CssClass="e-flat" @onclick="() => NavigateTo(&quot;/quality&quot;)">View Details →</SfButton>
        </div>

        <!-- Engineering Overview -->
        <div class="dashboard-card engineering-card">
            <h3>Engineering</h3>
            <div class="stats-summary">
                <div class="stat">
                    <span class="value">@ActiveDesigns</span>
                    <span class="label">Active Designs</span>
                </div>
                <div class="stat">
                    <span class="value">@CalculationsToday</span>
                    <span class="label">Calculations</span>
                </div>
                <div class="stat">
                    <span class="value">@ModelsAvailable</span>
                    <span class="label">3D Models</span>
                </div>
            </div>
            <SfButton CssClass="e-flat" @onclick="() => NavigateTo(&quot;/engineering&quot;)">View Details →</SfButton>
        </div>

        <!-- Recent Activity -->
        <div class="dashboard-card chart-card">
            <h3>Weekly Production Trend</h3>
            <SfChart Height="250px">
                <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                    <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                </ChartPrimaryXAxis>
                <ChartPrimaryYAxis>
                    <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                    <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                </ChartPrimaryYAxis>
                <ChartSeriesCollection>
                    <ChartSeries DataSource="@WeeklyProductionData" XName="Day" YName="Production" Type="ChartSeriesType.Column">
                        <ChartSeriesDataLabel Visible="false"></ChartSeriesDataLabel>
                    </ChartSeries>
                </ChartSeriesCollection>
                <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
            </SfChart>
        </div>
    </div>

    <!-- Recent Activity Timeline -->
    <div class="activity-section">
        <h2>Recent Activity</h2>
        <div class="activity-timeline">
            @if (RecentActivities.Any())
            {
                @foreach (var activity in RecentActivities)
                {
                    <div class="timeline-item">
                        <div class="timeline-dot @activity.Type"></div>
                        <div class="timeline-content">
                            <p>@activity.Description</p>
                            <span class="timeline-time">@activity.TimeAgo</span>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="no-activity">No recent activity</p>
            }
        </div>
    </div>

    <!-- Feature Highlights -->
    <div class="features-section">
        <h2>Platform Features</h2>
        <div class="features-grid">
            <div class="feature-card">
                <div class="feature-icon">
                    <span class="e-icons e-folder"></span>
                </div>
                <h4>ACC Integration</h4>
                <p>Seamless integration with Autodesk Construction Cloud for project management and model access.</p>
            </div>
            <div class="feature-card">
                <div class="feature-icon">
                    <span class="e-icons e-chart"></span>
                </div>
                <h4>Real-time Analytics</h4>
                <p>Monitor production efficiency, quality metrics, and engineering performance in real-time.</p>
            </div>
            <div class="feature-card">
                <div class="feature-icon">
                    <span class="e-icons e-settings"></span>
                </div>
                <h4>PCI Compliance</h4>
                <p>Built-in PCI standards and best practices for precast concrete design and manufacturing.</p>
            </div>
            <div class="feature-card">
                <div class="feature-icon">
                    <span class="e-icons e-mobile"></span>
                </div>
                <h4>Mobile Ready</h4>
                <p>Access your data and reports from anywhere with our responsive mobile-friendly interface.</p>
            </div>
        </div>
    </div>
</div>

@code {
    private bool IsAuthenticated { get; set; }
    private string UserName { get; set; } = "Guest";
    private int ProjectCount { get; set; } = 0;
    private string? CurrentProjectId { get; set; }

    // Dashboard metrics
    private int ActiveBeds = 8;
    private int TodayProduction = 47;
    private int EfficiencyRate = 87;
    private int PassRate = 96;
    private int ReportsToday = 12;
    private int PendingReviews = 3;
    private int ActiveDesigns = 24;
    private int CalculationsToday = 37;
    private int ModelsAvailable = 15;

    private List<WeeklyData> WeeklyProductionData = new();
    private List<ActivityItem> RecentActivities = new();

    protected override async Task OnInitializedAsync()
    {
        await CheckAuthentication();
        LoadDashboardData();
    }

    private async Task CheckAuthentication()
    {
        try
        {
            var user = await ACCService.GetCurrentUserAsync();
            if (user != null)
            {
                IsAuthenticated = true;
                UserName = user.Name ?? "User";
                
                var projects = await ACCService.GetProjectsAsync();
                ProjectCount = projects.Count;
            }
        }
        catch
        {
            IsAuthenticated = false;
        }
    }

    private void LoadDashboardData()
    {
        // Weekly production data
        WeeklyProductionData = new List<WeeklyData>
        {
            new WeeklyData { Day = "Mon", Production = 42 },
            new WeeklyData { Day = "Tue", Production = 38 },
            new WeeklyData { Day = "Wed", Production = 45 },
            new WeeklyData { Day = "Thu", Production = 47 },
            new WeeklyData { Day = "Fri", Production = 43 },
            new WeeklyData { Day = "Sat", Production = 32 }
        };

        // Recent activities
        RecentActivities = new List<ActivityItem>
        {
            new ActivityItem { Type = "report", Description = "QC Report #1247 completed for Bed 3", TimeAgo = "2 hours ago" },
            new ActivityItem { Type = "calculation", Description = "Beam design calculation saved", TimeAgo = "3 hours ago" },
            new ActivityItem { Type = "model", Description = "3D model viewed for Project Alpha", TimeAgo = "5 hours ago" }
        };
    }

    private async Task ConnectToACC()
    {
        await ACCService.InitiateAuthenticationAsync();
    }

    private void NavigateTo(string path)
    {
        Navigation.NavigateTo(path);
    }

    private class WeeklyData
    {
        public string Day { get; set; } = "";
        public int Production { get; set; }
    }

    private class ActivityItem
    {
        public string Type { get; set; } = "";
        public string Description { get; set; } = "";
        public string TimeAgo { get; set; } = "";
    }
}