// MetromontCastLink/MetromontCastLink/Components/Routes.razor
<Router AppAssembly="typeof(Program).Assembly" 
        AdditionalAssemblies="new[] { typeof(Client._Imports).Assembly }">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Client.Components.Layout.MainLayout)">
            <NotAuthorized>
                <div class="unauthorized-container">
                    <h2>Authentication Required</h2>
                    <p>Please connect to Autodesk Construction Cloud to access this page.</p>
                    <button class="btn btn-primary" @onclick="InitiateAuth">Connect to ACC</button>
                </div>
            </NotAuthorized>
            <Authorizing>
                <div class="loading-container">
                    <div class="spinner"></div>
                    <p>Checking authentication...</p>
                </div>
            </Authorizing>
        </AuthorizeRouteView>
        <FocusOnNavigate RouteData="routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="typeof(Client.Components.Layout.MainLayout)">
            <div class="not-found-container">
                <h1>404</h1>
                <h2>Page Not Found</h2>
                <p>Sorry, the page you're looking for doesn't exist.</p>
                <a href="/" class="btn btn-primary">Go to Home</a>
            </div>
        </LayoutView>
    </NotFound>
</Router>

<style>
    .unauthorized-container, .not-found-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 60vh;
        text-align: center;
        padding: 2rem;
    }

    .unauthorized-container h2, .not-found-container h1 {
        margin: 0 0 1rem 0;
        color: #1e293b;
    }

    .not-found-container h1 {
        font-size: 4rem;
        font-weight: 700;
        color: #e2e8f0;
    }

    .not-found-container h2 {
        font-size: 1.5rem;
        font-weight: 600;
        margin: 0 0 0.5rem 0;
    }

    .unauthorized-container p, .not-found-container p {
        margin: 0 0 1.5rem 0;
        color: #64748b;
    }

    .loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 60vh;
    }

    .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f4f6;
        border-top-color: #6366f1;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-bottom: 1rem;
    }

    @keyframes spin {
        to { transform: rotate(360deg); }
    }

    .btn {
        display: inline-block;
        padding: 0.75rem 1.5rem;
        background: #6366f1;
        color: white;
        text-decoration: none;
        border-radius: 0.5rem;
        font-weight: 500;
        transition: all 0.2s;
        border: none;
        cursor: pointer;
    }

    .btn:hover {
        background: #4f46e5;
        transform: translateY(-1px);
    }
</style>

@code {
    [Inject] private NavigationManager Navigation { get; set; } = default!;
    [Inject] private IACCService ACCService { get; set; } = default!;

    private async Task InitiateAuth()
    {
        await ACCService.InitiateAuthenticationAsync();
    }
}

// =====================================================
// MetromontCastLink/MetromontCastLink/appsettings.json
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "Microsoft.AspNetCore.Hosting.Diagnostics": "Information"
    }
  },
  "AllowedHosts": "*",
  "ACC": {
    "ClientId": "YOUR_ACC_CLIENT_ID_HERE",
    "ClientSecret": "YOUR_ACC_CLIENT_SECRET_HERE",
    "CallbackUrl": "https://localhost:7050/signin-acc",
    "Scopes": "data:read data:write data:create data:search account:read user:read viewables:read bucket:create bucket:read bucket:update bucket:delete"
  },
  "Jwt": {
    "Key": "YourSuperSecretKeyHereThatShouldBeAtLeast32CharactersLong",
    "Issuer": "MetromontCastLink",
    "Audience": "MetromontCastLinkUsers",
    "ExpiryInMinutes": 1440
  },
  "ConnectionStrings": {
    "DefaultConnection": "Data Source=castlink.db"
  },
  "Syncfusion": {
    "LicenseKey": "YOUR_SYNCFUSION_LICENSE_KEY_HERE"
  },
  "Storage": {
    "OssBucketPrefix": "metromont",
    "OssPersistencePolicy": "persistent",
    "LocalStorageEnabled": true
  },
  "Features": {
    "EnableQualityControl": true,
    "EnableEngineering": true,
    "EnableProduction": false,
    "EnableAnalytics": false,
    "EnableNotifications": true
  },
  "urls": "https://localhost:7050;http://localhost:5186"
}

// =====================================================
// MetromontCastLink/MetromontCastLink/appsettings.Development.json
{
  "Logging": {
    "LogLevel": {
      "Default": "Debug",
      "Microsoft.AspNetCore": "Debug",
      "MetromontCastLink": "Debug"
    }
  },
  "DetailedErrors": true,
  "ACC": {
    "ClientId": "YOUR_DEV_ACC_CLIENT_ID",
    "ClientSecret": "YOUR_DEV_ACC_CLIENT_SECRET",
    "CallbackUrl": "https://localhost:7050/signin-acc"
  }
}

// =====================================================
// MetromontCastLink.Client/wwwroot/appsettings.json
{
  "ACC": {
    "ClientId": "YOUR_ACC_CLIENT_ID_HERE",
    "CallbackUrl": "https://localhost:7050/signin-acc"
  },
  "API": {
    "BaseUrl": "https://localhost:7050"
  }
}